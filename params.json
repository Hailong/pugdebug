{"name":"Pugdebug","tagline":"A standalone PHP debugger","body":"# pugdebug\r\n\r\npugdebug is (well, should be) a PHP standalone debugger.\r\n\r\nA python 3.4.x, pyqt5 project.\r\n\r\n## setting up the environment\r\n\r\nThe main dependencies are Python 3.4,\r\n[QT5.4](http://doc.qt.io/qt-5/gettingstarted.html),\r\n[SIP4.6](http://www.riverbankcomputing.com/software/sip/download)\r\nand [PyQt5.4](http://www.riverbankcomputing.com/software/pyqt/download5).\r\n\r\nI wrote a [blog post](http://robertbasic.com/blog/install-pyqt5-in-python-3-virtual-environment)\r\nabout setting up a virtual environment for it.\r\n\r\nClone this repo and after setting up the virtual environment, install the application\r\nrequirements by running:\r\n\r\n```\r\npip install -r requirements.txt\r\n```\r\n\r\nAfter the requirements are installed, start pugdebug with a simple command:\r\n\r\n```\r\npython app.py\r\n```\r\n\r\n[@ihabunek](https://github.com/ihabunek) and [@vranac](https://github.com/vranac)\r\nreport that this process is pretty painless on Ubuntu and OSX machines. Some\r\npackage names might differ from what I used, but a document explaining the venv\r\nsetup process on different systems should be available soon.\r\n\r\nDo note that I'm trying to figure out how to build executables for this beast.\r\n\r\n### OS X setup with Homebrew\r\n\r\nEasiest way to install dependencies on OS X is to use [Homebrew].\r\nTo install the dependencies, execute the following commands from your terminal:\r\n```\r\nbrew install python3\r\nbrew install qt5 pyqt5 sip\r\n```\r\n\r\nGo to directory where you checked out the pugdebug, and execute\r\n```\r\npython3 app.py\r\n```\r\n\r\nAt the moment, there seems to be an issue with using virtualenv, python3 and pyqt5 on OS X Yosemite.\r\n\r\n## setting up xdebug\r\n\r\nTo be able to debug PHP with pugdebug, you need to have [xdebug](http://xdebug.org/docs/remote)\r\npropely set up for remote debugging.\r\n\r\nA minimal configuration would be something like:\r\n\r\n```\r\nxdebug.idekey=pugdebug\r\nxdebug.remote_enable=1\r\nxdebug.remote_port=9000\r\nxdebug.remote_host=127.0.0.1\r\n```\r\n\r\nIf the project you want to debug is in a vagrant virtual machine, your xdebug\r\nconfig should be something like:\r\n\r\n```\r\nxdebug.idekey=pugdebug\r\nxdebug.remote_enable=1\r\nxdebug.remote_port=9000\r\nxdebug.remote_connect_back=1\r\n```\r\n\r\nDo note that when debugging CLI scripts from a vagrant virtual machine, the\r\n`remote_connect_back` setting will not work, and we need to use the\r\n`remote_host` setting. The xdebug configuration should look something like:\r\n\r\n```\r\nxdebug.idekey=pugdebug\r\nxdebug.remote_enable=1\r\nxdebug.remote_port=9000\r\nxdebug.remote_host=33.33.33.1\r\n```\r\n\r\nYou can find the IP address to use for the remote host setting by issuing the\r\nfollowing command on the host machine:\r\n\r\n```\r\nip addr\r\n```\r\n\r\nand a part of the output will include something like this:\r\n\r\n```\r\n6: vboxnet2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UNKNOWN group default qlen 1000\r\n    link/ether 0a:00:27:00:00:02 brd ff:ff:ff:ff:ff:ff\r\n    inet 33.33.33.1/24 brd 33.33.33.255 scope global vboxnet2\r\n       valid_lft forever preferred_lft forever\r\n    inet6 fe80::800:27ff:fe00:2/64 scope link\r\n       valid_lft forever preferred_lft forever\r\n```\r\n\r\nand from there we can see the IP address of `33.33.33.1`.\r\n\r\n## using pugdebug\r\n\r\nIn a terminal go to the directory where you have pugdebug cloned and start it by\r\nissuing a `python app.py` command.\r\n\r\nOn the left side you can see a simple file browser that should list your home\r\ndirectory.\r\n\r\nUnder it is an input field with the label `Root:`, containing the path to your\r\nhome directory.\r\n\r\nBy entering a new root path in the `root` input field will change the root\r\ndirectory of the file browser.\r\n\r\nFor example, on my laptop it starts with `/home/robert` and the file browser\r\nlists my home directory. If I enter `/home/robert/www/pugdebug` into the `root`\r\ninput field, the file browser will change to the pugdebug web project.\r\n\r\nBut this is just temporary, it will be nicer in the future.\r\n\r\n## debugging sessions\r\n\r\nTo start a debugging session, click the \"Start\" button in the top left corner.\r\n\r\nLoad your web project in your browser and start a\r\n[HTTP debugging session](http://xdebug.org/docs/remote#browser_session).\r\n\r\npugdebug should pick up that session and display the index file of your web\r\nproject, while stopping the execution on the first line.\r\n\r\nUsing the `Run`, `Over`, `In`, `Out` continuation commands you can step through\r\nyour PHP code.\r\n\r\nSetting breakpoints is possible by double clicking the line where a breakpoint\r\nshould be placed.\r\n\r\nThe correspoding line number should be highlighted and a new breakpoint should\r\nbe listed in the breakpoint viewer (bottom right corner).\r\n\r\nDouble clicking the line with a breakpoint should remove that breakpoint.\r\n\r\n## debugging cli scripts\r\n\r\nIt is also possible to debug CLI scripts with pugdebug.\r\n\r\nStart pugdebug as stated in the previous section, click `Start` to\r\nstart a debugging session and then in a second terminal type:\r\n\r\n```\r\nexport XDEBUG_CONFIG=\"idekey=pugdebug\"\r\n```\r\n\r\n(or whatever you set the `xdebug.idekey` setting to) and then start\r\nyour PHP CLI script normally:\r\n\r\n```\r\nphp script.php\r\n```\r\n\r\npugdebug should pick up the debugging session and let you debug your script.\r\n\r\n## executables\r\n\r\nI'm trying to make executables with\r\n[pyqtdeploy](http://www.riverbankcomputing.com/software/pyqtdeploy/download).\r\nSo far I managed to create one for Fedora 21.\r\n\r\n## todo\r\n\r\nTake a look at the [issue tracker](https://github.com/robertbasic/pugdebug/issues).\r\n\r\n## contributions\r\n\r\nContributions are more than welcome! Report bugs, tell me your ideas and needs,\r\nwrite code, test it on different platforms ...\r\n\r\n[Homebrew]: http://brew.sh/\r\n\r\n## slack\r\n\r\nThere's a slack created for pugdebug at https://pugdebug.slack.com/\r\n\r\nIf you would like access, open a [new ticket](https://github.com/robertbasic/pugdebug/issues).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}